# MORE Platform
# Overrides for staging

name: more-platform${ENV_SUFFIX--test}
services:
  watchtower:
    image: containrrr/watchtower
    restart: always
    environment:
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: "30"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /root/.docker/config.json
        target: /config.json
        read_only: true
  ingress:
    environment:
      # let's-encrypt config
      TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_EMAIL: "${LE_MAIL-infra@redlink.io}"
      TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_HTTPCHALLENGE_ENTRYPOINT: "web"
      TRAEFIK_CERTIFICATESRESOLVERS_LE_ACME_STORAGE: "/etc/traefik/acme/acme${ENV_SUFFIX--test}.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: volume
        source: letsencrypt
        target: /etc/traefik/acme

  mmb-backend:
    labels:
      'com.centurylinklabs.watchtower.enable': "true"
      'traefik.http.routers.mmb-backend.rule': "Host(`mmb.platform${ENV_SUFFIX--test}.more.redlink.io`) && PathPrefix(`/api`)"
      'traefik.http.routers.mmb-backend.tls.certResolver': 'le'
  mmb-frontend:
    labels:
      'com.centurylinklabs.watchtower.enable': "true"
      'traefik.http.routers.mmb-frontend.rule': "Host(`mmb.platform${ENV_SUFFIX--test}.more.redlink.io`)"
      'traefik.http.routers.mmb-frontend.tls.certResolver': 'le'
  dsb-gateway:
    labels:
      'com.centurylinklabs.watchtower.enable': "true"
      'traefik.http.routers.dsb-gateway.rule': "Host(`dsb.platform${ENV_SUFFIX--test}.more.redlink.io`)"
      'traefik.http.routers.dsb-gateway.tls.certResolver': 'le'
  kibana:
    labels:
      'traefik.http.routers.kibana.rule': "Host(`kibana.platform${ENV_SUFFIX--test}.more.redlink.io`)"
      'traefik.http.routers.kibana.tls.certResolver': 'le'

volumes:
  letsencrypt:
