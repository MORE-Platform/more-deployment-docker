# MORE Platform
# Base-Config
name: more-platform
services:
  # Proxy / Ingress
  ingress:
    image: traefik:v2.8
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost$${TRAEFIK_ENTRYPOINTS_TRAEFIK_ADDRESS:-:8080}/ping || exit 1"]
      timeout: 2s
      interval: 15s
      retries: 3
    environment:
      TRAEFIK_PING: "true"
      # docker-config
      TRAEFIK_PROVIDERS_DOCKER: "true"
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
      # http
      TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: ":80"
      # https
      TRAEFIK_ENTRYPOINTS_SSL_ADDRESS: ":443"
      TRAEFIK_ENTRYPOINTS_SSL_HTTP_TLS: "true"
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.redirect-to-ssl.priority': "1"
      'traefik.http.routers.redirect-to-ssl.rule': "PathPrefix(`/`)"
      'traefik.http.routers.redirect-to-ssl.service': "noop@internal"
      'traefik.http.routers.redirect-to-ssl.entrypoints': "web"
      'traefik.http.routers.redirect-to-ssl.middlewares': "redirect-to-ssl"
      'traefik.http.middlewares.redirect-to-ssl.redirectscheme.scheme': "https"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

  # Postgres Database
  postgres:
    image: postgres:15-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 1s
      retries: 5
    environment:
      POSTGRES_PASSWORD: secretPassword123
      POSTGRES_USER: more
      POSTGRES_DB: more
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', '[ "$$(redis-cli ping)" = "PONG" ]' ]
      interval: 10s
      timeout: 1s
      retries: 5

  # ElasticSearch
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.2
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail -m 5 http://localhost:9200/_cluster/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 640M
        reservations:
          memory: 512M
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      discovery.type: "single-node"
      cluster.name: "more-cluster"
      bootstrap.memory_lock: true
      xpack.security.enabled: "false"
    volumes:
      - type: volume
        source: elastic-data
        target: /usr/share/elasticsearch/data

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.2
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elastic:9200
    depends_on:
      elastic:
        condition: service_healthy
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.kibana.entrypoints': "ssl"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail -m 5 -I http://localhost:5601/api/status || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  lime-db:
    image: postgres:14-alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 1s
      retries: 5
    environment:
      POSTGRES_USER: limesurvey
      POSTGRES_DB: limesurvey
      POSTGRES_PASSWORD: secretLime456
    volumes:
      - type: volume
        source: lime-db-data
        target: /var/lib/postgresql/data

  limesurvey:
    image: ghcr.io/more-platform/limesurvey:latest
    restart: always
    depends_on:
      lime-db:
        condition: service_healthy
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.limesurvey.entrypoints': "ssl"
      'traefik.http.services.limesurvey.loadbalancer.server.port': "8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -sfI -m5 http://localhost:8080 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    environment:
      DB_TYPE: pgsql
      DB_PORT: 5432
      DB_HOST: lime-db
      DB_PASSWORD: secretLime456
      DB_NAME: limesurvey
      DB_USERNAME: limesurvey
      ADMIN_NAME: MORE Admin
      ADMIN_USER: more-admin
      # Initial Password, will be changed on setup
      ADMIN_PASSWORD: admin
    volumes:
      - type: volume
        source: limesurvey-data
        target: /var/www/html/upload/surveys

  # Management & Monitoring
  study-manager-backend:
    image: ghcr.io/more-platform/more-study-manager-backend:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.studymanager-backend.entrypoints': "ssl"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      timeout: 2s
      interval: 15s
      retries: 3
    environment:
      POSTGRES_DBNAME: more
      POSTGRES_USER: more
      POSTGRES_PASSWORD: secretPassword123
      ELASTIC_HOST: elastic
      KIBANA_URI: http://kibana:5601
      OAUTH2_SERVER: https://auth.more.redlink.io/realms/Auth-Client-Test
      OAUTH2_CLIENT_ID: oauth2-pkce-client
      OAUTH2_CLIENT_SECRET: ''
      REDIS_HOST: 'redis'

  study-manager-frontend:
    image: ghcr.io/more-platform/more-study-manager-frontend:latest
    restart: always
    depends_on:
      study-manager-backend:
        condition: service_healthy
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.studymanager-frontend.entrypoints': "ssl"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
      timeout: 2s
      interval: 15s
      retries: 3
    environment:
      MORE_API_ENDPOINT: "http://study-manager-backend:8080/api/"
      MORE_BACKEND_URL: "http://study-manager-backend:8080/"

  # Data Storage Gateway
  data-gateway:
    image: ghcr.io/more-platform/more-data-gateway:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
    deploy:
      replicas: 1
    labels:
      'traefik.enable': "true"
      'traefik.http.routers.dsb-gateway.entrypoints': "ssl"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      timeout: 2s
      interval: 15s
      retries: 3
    environment:
      POSTGRES_DBNAME: more
      POSTGRES_USER: more
      POSTGRES_PASSWORD: secretPassword123
      ELASTIC_HOST: elastic
      REDIS_HOST: 'redis'

volumes:
  postgres-data:
  elastic-data:
  lime-db-data:
  limesurvey-data:
